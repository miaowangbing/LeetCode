//方法1：单纯的数学思想
class Solution {
public:
    int integerBreak(int n) {//拆出足够多的3就能使得乘积最大
        //如果不限整数,那么拆分成自然对数是最佳拆分办法
        if(n==2)return 1;
        else if(n==3)return 2;
        int result=0;
        switch(n%3){
            case 0:result=pow(3,n/3);break;
            case 1:result=4*pow(3,n/3-1);break;
            case 2:result=2*pow(3,n/3);break;
        }
        return result;
    }
};

//方法2：动态规划
class Solution {
public:
    int integerBreak(int n) {//拆出足够多的3就能使得乘积最大 动态规划
        //如果不限整数,那么拆分成自然对数是最佳拆分办法
        vector<int> dp{0,0,1,2,4,6,9};
        for(int i=7;i<=n;i++)
            dp.push_back(3*dp[i-3]);//拆分出一个3
        return dp[n];
    }
};
